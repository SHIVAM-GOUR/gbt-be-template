version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gbt-app
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=gbt_template
      - DB_SSLMODE=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRY=24h
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gbt-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: gbt-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=gbt_template
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gbt-network
    restart: unless-stopped

  migrate:
    image: migrate/migrate
    container_name: gbt-migrate
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:password@postgres:5432/gbt_template?sslmode=disable",
      "up"
    ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gbt-network

volumes:
  postgres_data:

networks:
  gbt-network:
    driver: bridge
